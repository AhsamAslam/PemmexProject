// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Survey.API.Database.Context;

namespace Survey.API.Migrations
{
    [DbContext(typeof(SurveyContext))]
    partial class SurveyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Survey.API.Database.Entities.EmployeeSurvey", b =>
                {
                    b.Property<int>("employeeSurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("businessIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSurveySubmitted")
                        .HasColumnType("bit");

                    b.Property<string>("managerIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("managerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organizationSurveyId")
                        .HasColumnType("int");

                    b.HasKey("employeeSurveyId");

                    b.ToTable("EmployeeSurvey");
                });

            modelBuilder.Entity("Survey.API.Database.Entities.OrganizationSurvey", b =>
                {
                    b.Property<int>("organizationSurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organizationIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("organizationSurveyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("organizationSurveyId");

                    b.ToTable("OrganizationSurvey");
                });

            modelBuilder.Entity("Survey.API.Database.Entities.OrganizationSurveyQuestion", b =>
                {
                    b.Property<int>("surveyQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("organizationSurveyId")
                        .HasColumnType("int");

                    b.Property<string>("surveyComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("surveyRate")
                        .HasColumnType("int");

                    b.HasKey("surveyQuestionId", "organizationSurveyId");

                    b.HasIndex("organizationSurveyId");

                    b.ToTable("OrganizationSurveyQuestion");
                });

            modelBuilder.Entity("Survey.API.Database.Entities.SurveyQuestion", b =>
                {
                    b.Property<int>("surveyQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("questionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("questionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("segmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("segmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("surveyQuestionAttrition")
                        .HasColumnType("float");

                    b.Property<double>("surveyQuestionEngagement")
                        .HasColumnType("float");

                    b.Property<double>("surveyQuestionNPS")
                        .HasColumnType("float");

                    b.HasKey("surveyQuestionId");

                    b.ToTable("SurveyQuestion");
                });

            modelBuilder.Entity("Survey.API.Database.Entities.OrganizationSurveyQuestion", b =>
                {
                    b.HasOne("Survey.API.Database.Entities.OrganizationSurvey", "OrganizationSurvey")
                        .WithMany("OrganizationSurveyQuestion")
                        .HasForeignKey("organizationSurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Survey.API.Database.Entities.SurveyQuestion", "SurveyQuestion")
                        .WithMany("OrganizationSurveyQuestion")
                        .HasForeignKey("surveyQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationSurvey");

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("Survey.API.Database.Entities.OrganizationSurvey", b =>
                {
                    b.Navigation("OrganizationSurveyQuestion");
                });

            modelBuilder.Entity("Survey.API.Database.Entities.SurveyQuestion", b =>
                {
                    b.Navigation("OrganizationSurveyQuestion");
                });
#pragma warning restore 612, 618
        }
    }
}
